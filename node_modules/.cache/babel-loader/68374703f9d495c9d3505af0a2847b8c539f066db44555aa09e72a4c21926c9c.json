{"ast":null,"code":"var _jsxFileName = \"D:\\\\learing\\\\peer_instrution\\\\code\\\\my-app\\\\src\\\\component\\\\answer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\n\n// 注册 Chart.js 所需的组件\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\nconst Answer = () => {\n  _s();\n  // 初始化题目、选项和回答分布的state\n  const [question, setQuestion] = useState('');\n  const [options, setOptions] = useState([]);\n  const [answerDistribution, setAnswerDistribution] = useState([]);\n\n  // 使用 useEffect 模拟数据初始化\n  useEffect(() => {\n    // 模拟从API获取数据或从父组件传入数据\n    const initialQuestion = \"你最喜欢的编程语言是？\";\n    const initialOptions = [\"JavaScript\", \"Python\", \"Java\", \"C++\"];\n    const initialAnswerDistribution = [40, 30, 20, 10];\n\n    // 设置数据\n    setQuestion(initialQuestion);\n    setOptions(initialOptions);\n    setAnswerDistribution(initialAnswerDistribution);\n  }, []);\n\n  // 创建条形图所需的数据格式\n  const chartData = {\n    labels: options,\n    // 选项\n    datasets: [{\n      data: answerDistribution,\n      // 答案分布\n      backgroundColor: '#36A2EB',\n      // 条形图的颜色\n      borderColor: '#36A2EB',\n      borderWidth: 1,\n      barThickness: 15 // 控制条形图的粗细\n    }]\n  };\n\n  // 配置图表选项（如缩小图表大小）\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    // 允许图表容器尺寸发生变化\n    plugins: {\n      legend: {\n        position: 'top'\n      }\n    },\n    scales: {\n      x: {\n        beginAtZero: true // 确保从0开始显示\n      },\n      y: {\n        beginAtZero: true // 确保从0开始显示\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"answer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"answer\",\n          id: `option${index}`,\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `option${index}`,\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u56DE\\u7B54\\u60C5\\u51B5\\u5206\\u5E03\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: chartData,\n          options: chartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Answer, \"sAAoAI7elhI02Sg4pJ9LNPXOG5M=\");\n_c = Answer;\nexport default Answer;\nvar _c;\n$RefreshReg$(_c, \"Answer\");","map":{"version":3,"names":["React","useState","useEffect","Bar","Chart","ChartJS","Title","Tooltip","Legend","BarElement","CategoryScale","LinearScale","jsxDEV","_jsxDEV","register","Answer","_s","question","setQuestion","options","setOptions","answerDistribution","setAnswerDistribution","initialQuestion","initialOptions","initialAnswerDistribution","chartData","labels","datasets","data","backgroundColor","borderColor","borderWidth","barThickness","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","scales","x","beginAtZero","y","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","index","type","name","id","disabled","htmlFor","_c","$RefreshReg$"],"sources":["D:/learing/peer_instrution/code/my-app/src/component/answer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\r\n\r\n// 注册 Chart.js 所需的组件\r\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\r\n\r\nconst Answer = () => {\r\n  // 初始化题目、选项和回答分布的state\r\n  const [question, setQuestion] = useState('');\r\n  const [options, setOptions] = useState([]);\r\n  const [answerDistribution, setAnswerDistribution] = useState([]);\r\n\r\n  // 使用 useEffect 模拟数据初始化\r\n  useEffect(() => {\r\n    // 模拟从API获取数据或从父组件传入数据\r\n    const initialQuestion = \"你最喜欢的编程语言是？\";\r\n    const initialOptions = [\"JavaScript\", \"Python\", \"Java\", \"C++\"];\r\n    const initialAnswerDistribution = [40, 30, 20, 10];\r\n\r\n    // 设置数据\r\n    setQuestion(initialQuestion);\r\n    setOptions(initialOptions);\r\n    setAnswerDistribution(initialAnswerDistribution);\r\n  }, []);\r\n\r\n  // 创建条形图所需的数据格式\r\n  const chartData = {\r\n    labels: options, // 选项\r\n    datasets: [\r\n      {\r\n        data: answerDistribution, // 答案分布\r\n        backgroundColor: '#36A2EB', // 条形图的颜色\r\n        borderColor: '#36A2EB',\r\n        borderWidth: 1,\r\n        barThickness: 15, // 控制条形图的粗细\r\n      },\r\n    ],\r\n  };\r\n\r\n  // 配置图表选项（如缩小图表大小）\r\n  const chartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false, // 允许图表容器尺寸发生变化\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        beginAtZero: true, // 确保从0开始显示\r\n      },\r\n      y: {\r\n        beginAtZero: true, // 确保从0开始显示\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"answer-container\">\r\n      <h2>{question}</h2>\r\n      <div className=\"options\">\r\n        {options.map((option, index) => (\r\n          <div key={index} className=\"option\">\r\n            <input type=\"radio\" name=\"answer\" id={`option${index}`} disabled />\r\n            <label htmlFor={`option${index}`}>{option}</label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"chart\">\r\n        <h3>回答情况分布</h3>\r\n        <div className=\"chart-container\">\r\n          <Bar data={chartData} options={chartOptions} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Answer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}