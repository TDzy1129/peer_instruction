{"ast":null,"code":"var _jsxFileName = \"D:\\\\learing\\\\peer_instrution\\\\code\\\\my-app\\\\src\\\\component\\\\interaction.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./interaction.css\";\nimport InteractionCard from \"./interactionCard\";\nimport { selectLessonQ } from \"../api/question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Interaction = () => {\n  _s();\n  const [questions, setQuestion] = useState([]);\n  const lessonId = localStorage.getItem('lesson_id');\n  const student_id = localStorage.getItem('user');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // 获取课堂题目\n        const response = await selectLessonQ(lessonId);\n        const questions = response[0];\n\n        // 获取 student_id 并判断前两位\n        const studentId = localStorage.getItem('user');\n        const prefix = studentId === null || studentId === void 0 ? void 0 : studentId.substring(0, 2);\n        if (prefix === '11') {\n          // 查询每个问题的回答记录并设置 available 属性\n          const updatedQuestions = await Promise.all(questions.map(async question => {\n            const {\n              h_w_id,\n              course_id\n            } = question;\n            try {\n              // 查询单条回答记录\n              const record = await selectSingleRecord(h_w_id, studentId, course_id);\n              return {\n                ...question,\n                record: record[0] || null,\n                // 添加回答记录到问题对象\n                available: record[0] ? 1 : 0 // 如果有记录，设置 available 为 1，否则为 0\n              };\n            } catch (err) {\n              console.error(`获取单条回答记录失败: h_w_id=${h_w_id}`, err);\n              return {\n                ...question,\n                record: null,\n                available: 0\n              }; // 查询失败时默认 available 为 0\n            }\n          }));\n          setQuestion(updatedQuestions); // 更新问题列表，包含回答记录和 available 属性\n        } else {\n          // 非学生用户或无需查询记录，默认 available 为 0\n          const defaultQuestions = questions.map(q => ({\n            ...q\n          }));\n          setQuestion(defaultQuestions);\n        }\n      } catch (err) {\n        console.error('获取课堂题目失败:', err);\n      }\n    };\n    fetchData();\n  }, [lessonId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(InteractionCard, {\n      type: \"单选题\",\n      description: question.content,\n      self_status: question.available,\n      index: question.h_w_id\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(Interaction, \"BWw4JiLx4J/TQVKSzXfCU/6BPWw=\");\n_c = Interaction;\nexport default Interaction;\nvar _c;\n$RefreshReg$(_c, \"Interaction\");","map":{"version":3,"names":["React","useState","useEffect","InteractionCard","selectLessonQ","jsxDEV","_jsxDEV","Interaction","_s","questions","setQuestion","lessonId","localStorage","getItem","student_id","fetchData","response","studentId","prefix","substring","updatedQuestions","Promise","all","map","question","h_w_id","course_id","record","selectSingleRecord","available","err","console","error","defaultQuestions","q","children","index","type","description","content","self_status","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/learing/peer_instrution/code/my-app/src/component/interaction.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./interaction.css\";\r\nimport InteractionCard from \"./interactionCard\";\r\nimport { selectLessonQ } from \"../api/question\";\r\n\r\nconst Interaction = () => {\r\n    const [questions, setQuestion] = useState([]);\r\n    const lessonId = localStorage.getItem('lesson_id');\r\n\r\n    const student_id = localStorage.getItem('user');\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                // 获取课堂题目\r\n                const response = await selectLessonQ(lessonId);\r\n                const questions = response[0];\r\n    \r\n                // 获取 student_id 并判断前两位\r\n                const studentId = localStorage.getItem('user');\r\n                const prefix = studentId?.substring(0, 2);\r\n    \r\n                if (prefix === '11') {\r\n                    // 查询每个问题的回答记录并设置 available 属性\r\n                    const updatedQuestions = await Promise.all(\r\n                        questions.map(async (question) => {\r\n                            const { h_w_id, course_id } = question;\r\n                            try {\r\n                                // 查询单条回答记录\r\n                                const record = await selectSingleRecord(h_w_id, studentId, course_id);\r\n                                return {\r\n                                    ...question,\r\n                                    record: record[0] || null, // 添加回答记录到问题对象\r\n                                    available: record[0] ? 1 : 0, // 如果有记录，设置 available 为 1，否则为 0\r\n                                };\r\n                            } catch (err) {\r\n                                console.error(`获取单条回答记录失败: h_w_id=${h_w_id}`, err);\r\n                                return { ...question, record: null, available: 0 }; // 查询失败时默认 available 为 0\r\n                            }\r\n                        })\r\n                    );\r\n                    setQuestion(updatedQuestions); // 更新问题列表，包含回答记录和 available 属性\r\n                } else {\r\n                    // 非学生用户或无需查询记录，默认 available 为 0\r\n                    const defaultQuestions = questions.map((q) => ({\r\n                        ...q\r\n                    }));\r\n                    setQuestion(defaultQuestions);\r\n                }\r\n            } catch (err) {\r\n                console.error('获取课堂题目失败:', err);\r\n            }\r\n        };\r\n    \r\n        fetchData();\r\n    }, [lessonId]);\r\n    \r\n\r\n    return (\r\n        <div>\r\n            {questions.map((question, index) => (\r\n                <InteractionCard\r\n                    key={index}\r\n                    type={\"单选题\"}\r\n                    description={question.content}\r\n                    self_status={question.available}\r\n                    index={question.h_w_id}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Interaction;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}