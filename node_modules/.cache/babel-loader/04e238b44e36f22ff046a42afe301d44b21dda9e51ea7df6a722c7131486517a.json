{"ast":null,"code":"var _jsxFileName = \"D:\\\\learing\\\\peer_instrution\\\\code\\\\my-app\\\\src\\\\component\\\\multipleChoiceQuestion.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './multipleChoiceQuestion.css';\nimport { selectSingleRecord, insertRecord } from '../api/answer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MultipleChoiceQuestion = ({\n  question,\n  options,\n  correctAnswer\n}) => {\n  _s();\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const user = localStorage.getItem('user');\n  const course_id = localStorage.getItem('course_id');\n  const handleOptionClick = (option, letter) => {\n    setSelectedOption(letter); // 将选项字母存储到 selectedOption\n    const correctOption = options[[\"A\", \"B\", \"C\", \"D\"].indexOf(correctAnswer)];\n    if (option === correctOption) {\n      setIsCorrect(true);\n      console.log(letter); // 打印正确的选项字母\n    } else {\n      setIsCorrect(false);\n    }\n  };\n  const handleBackClick = () => {\n    navigate(-1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"question\",\n      children: question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options-container\",\n      children: options.map((option, index) => {\n        const letter = [\"A\", \"B\", \"C\", \"D\"][index]; // 将索引映射到选项字母\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `option ${selectedOption === letter ? 'selected' : ''}`,\n          onClick: () => handleOptionClick(option, letter) // 传递选项内容和对应的字母\n          ,\n          children: [letter, \". \", option]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), selectedOption && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"feedback-message\",\n      children: isCorrect ? '答对了!' : '再试一次!'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-button\",\n      onClick: handleBackClick,\n      children: \"\\u8FD4\\u56DE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(MultipleChoiceQuestion, \"baeh3VBqtlJsgSrUchNos7RqUEk=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = MultipleChoiceQuestion;\nexport default MultipleChoiceQuestion;\nvar _c;\n$RefreshReg$(_c, \"MultipleChoiceQuestion\");","map":{"version":3,"names":["React","useState","useNavigate","useParams","selectSingleRecord","insertRecord","jsxDEV","_jsxDEV","MultipleChoiceQuestion","question","options","correctAnswer","_s","selectedOption","setSelectedOption","isCorrect","setIsCorrect","navigate","id","user","localStorage","getItem","course_id","handleOptionClick","option","letter","correctOption","indexOf","console","log","handleBackClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","_c","$RefreshReg$"],"sources":["D:/learing/peer_instrution/code/my-app/src/component/multipleChoiceQuestion.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport './multipleChoiceQuestion.css';\r\nimport {  selectSingleRecord, insertRecord } from '../api/answer';\r\n\r\nconst MultipleChoiceQuestion = ({ question, options, correctAnswer }) => {\r\n    const [selectedOption, setSelectedOption] = useState(null);\r\n    const [isCorrect, setIsCorrect] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const { id } = useParams();\r\n    const user = localStorage.getItem('user');\r\n    const course_id = localStorage.getItem('course_id');\r\n\r\n    const handleOptionClick = (option, letter) => {\r\n        setSelectedOption(letter); // 将选项字母存储到 selectedOption\r\n        const correctOption = options[[\"A\", \"B\", \"C\", \"D\"].indexOf(correctAnswer)];\r\n        if (option === correctOption) {\r\n            setIsCorrect(true);\r\n            console.log(letter); // 打印正确的选项字母\r\n        } else {\r\n            setIsCorrect(false);\r\n        }\r\n        \r\n\r\n    };\r\n\r\n    const handleBackClick = () => {\r\n        navigate(-1);\r\n    };\r\n\r\n    return (\r\n        <div className=\"question-container\">\r\n            <h2 className=\"question\">{question}</h2>\r\n            <div className=\"options-container\">\r\n                {options.map((option, index) => {\r\n                    const letter = [\"A\", \"B\", \"C\", \"D\"][index]; // 将索引映射到选项字母\r\n                    return (\r\n                        <button\r\n                            key={index}\r\n                            className={`option ${selectedOption === letter ? 'selected' : ''}`}\r\n                            onClick={() => handleOptionClick(option, letter)} // 传递选项内容和对应的字母\r\n                        >\r\n                            {letter}. {option}\r\n                        </button>\r\n                    );\r\n                })}\r\n            </div>\r\n            {selectedOption && (\r\n                <p className=\"feedback-message\">\r\n                    {isCorrect ? '答对了!' : '再试一次!'}\r\n                </p>\r\n            )}\r\n            <button className=\"back-button\" onClick={handleBackClick}>\r\n                返回\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MultipleChoiceQuestion;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,OAAO,8BAA8B;AACrC,SAAUC,kBAAkB,EAAEC,YAAY,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,sBAAsB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,OAAO;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMgB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9B,MAAM;IAAEgB;EAAG,CAAC,GAAGf,SAAS,CAAC,CAAC;EAC1B,MAAMgB,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EACzC,MAAMC,SAAS,GAAGF,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAEnD,MAAME,iBAAiB,GAAGA,CAACC,MAAM,EAAEC,MAAM,KAAK;IAC1CX,iBAAiB,CAACW,MAAM,CAAC,CAAC,CAAC;IAC3B,MAAMC,aAAa,GAAGhB,OAAO,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAACiB,OAAO,CAAChB,aAAa,CAAC,CAAC;IAC1E,IAAIa,MAAM,KAAKE,aAAa,EAAE;MAC1BV,YAAY,CAAC,IAAI,CAAC;MAClBY,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC,CAAC,CAAC;IACzB,CAAC,MAAM;MACHT,YAAY,CAAC,KAAK,CAAC;IACvB;EAGJ,CAAC;EAED,MAAMc,eAAe,GAAGA,CAAA,KAAM;IAC1Bb,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC;EAED,oBACIV,OAAA;IAAKwB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAC/BzB,OAAA;MAAIwB,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAEvB;IAAQ;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxC7B,OAAA;MAAKwB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAC7BtB,OAAO,CAAC2B,GAAG,CAAC,CAACb,MAAM,EAAEc,KAAK,KAAK;QAC5B,MAAMb,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAACa,KAAK,CAAC,CAAC,CAAC;QAC5C,oBACI/B,OAAA;UAEIwB,SAAS,EAAE,UAAUlB,cAAc,KAAKY,MAAM,GAAG,UAAU,GAAG,EAAE,EAAG;UACnEc,OAAO,EAAEA,CAAA,KAAMhB,iBAAiB,CAACC,MAAM,EAAEC,MAAM,CAAE,CAAC;UAAA;UAAAO,QAAA,GAEjDP,MAAM,EAAC,IAAE,EAACD,MAAM;QAAA,GAJZc,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKN,CAAC;MAEjB,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EACLvB,cAAc,iBACXN,OAAA;MAAGwB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC1BjB,SAAS,GAAG,MAAM,GAAG;IAAO;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CACN,eACD7B,OAAA;MAAQwB,SAAS,EAAC,aAAa;MAACQ,OAAO,EAAET,eAAgB;MAAAE,QAAA,EAAC;IAE1D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACxB,EAAA,CArDIJ,sBAAsB;EAAA,QAGPN,WAAW,EAEbC,SAAS;AAAA;AAAAqC,EAAA,GALtBhC,sBAAsB;AAuD5B,eAAeA,sBAAsB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}