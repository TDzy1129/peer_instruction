{"ast":null,"code":"const mysql = require('mysql2');\nconst bcrypt = require('bcryptjs');\n\n// 连接 MySQL 数据库\nconst db = mysql.createPool({\n  host: 'localhost',\n  user: 'root',\n  password: '123456',\n  // 用你自己的 MySQL 密码\n  database: 'peer_instruction'\n});\n\n// 用户注册\nconst registerUser = (username, password, email, callback) => {\n  // 加密密码\n  bcrypt.hash(password, 10, (err, hashedPassword) => {\n    if (err) {\n      callback(err, null);\n      return;\n    }\n\n    // 插入新用户到数据库\n    db.query('INSERT INTO users (username, password) VALUES (?, ?)', [username, hashedPassword, email], (err, result) => {\n      if (err) {\n        callback(err, null);\n        return;\n      }\n      callback(null, result);\n    });\n  });\n};\n\n// 用户登录验证函数\nfunction authenticateUser(username, password, callback) {\n  const sql = 'SELECT * FROM users WHERE username = ?';\n  db.execute(sql, [username], (err, results) => {\n    if (err) return callback(err);\n    if (results.length === 0) return callback(null, false); // 用户名不存在\n\n    const user = results[0];\n    // 比较密码\n    bcrypt.compare(password, user.password, (err, isMatch) => {\n      if (err) return callback(err);\n      if (isMatch) {\n        callback(null, user); // 登录成功，返回用户信息\n      } else {\n        callback(null, false); // 密码错误\n      }\n    });\n  });\n}\nmodule.exports = {\n  registerUser,\n  authenticateUser\n};","map":{"version":3,"names":["mysql","require","bcrypt","db","createPool","host","user","password","database","registerUser","username","email","callback","hash","err","hashedPassword","query","result","authenticateUser","sql","execute","results","length","compare","isMatch","module","exports"],"sources":["D:/learing/peer_instrution/code/my-app/src/component/user.js"],"sourcesContent":["const mysql = require('mysql2');\r\nconst bcrypt = require('bcryptjs');\r\n\r\n// 连接 MySQL 数据库\r\nconst db = mysql.createPool({\r\n    host: 'localhost',\r\n    user: 'root',\r\n    password: '123456',  // 用你自己的 MySQL 密码\r\n    database: 'peer_instruction'\r\n});\r\n\r\n// 用户注册\r\nconst registerUser = (username, password, email, callback) => {\r\n    // 加密密码\r\n    bcrypt.hash(password, 10, (err, hashedPassword) => {\r\n        if (err) {\r\n            callback(err, null);\r\n            return;\r\n        }\r\n\r\n        // 插入新用户到数据库\r\n        db.query('INSERT INTO users (username, password) VALUES (?, ?)',\r\n            [username, hashedPassword, email], (err, result) => {\r\n                if (err) {\r\n                    callback(err, null);\r\n                    return;\r\n                }\r\n                callback(null, result);\r\n            });\r\n    });\r\n};\r\n\r\n\r\n// 用户登录验证函数\r\nfunction authenticateUser(username, password, callback) {\r\n    const sql = 'SELECT * FROM users WHERE username = ?';\r\n    db.execute(sql, [username], (err, results) => {\r\n        if (err) return callback(err);\r\n        if (results.length === 0) return callback(null, false);  // 用户名不存在\r\n\r\n        const user = results[0];\r\n        // 比较密码\r\n        bcrypt.compare(password, user.password, (err, isMatch) => {\r\n            if (err) return callback(err);\r\n            if (isMatch) {\r\n                callback(null, user); // 登录成功，返回用户信息\r\n            } else {\r\n                callback(null, false); // 密码错误\r\n            }\r\n        });\r\n    });\r\n}\r\nmodule.exports = { registerUser, authenticateUser};\r\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC/B,MAAMC,MAAM,GAAGD,OAAO,CAAC,UAAU,CAAC;;AAElC;AACA,MAAME,EAAE,GAAGH,KAAK,CAACI,UAAU,CAAC;EACxBC,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,MAAM;EACZC,QAAQ,EAAE,QAAQ;EAAG;EACrBC,QAAQ,EAAE;AACd,CAAC,CAAC;;AAEF;AACA,MAAMC,YAAY,GAAGA,CAACC,QAAQ,EAAEH,QAAQ,EAAEI,KAAK,EAAEC,QAAQ,KAAK;EAC1D;EACAV,MAAM,CAACW,IAAI,CAACN,QAAQ,EAAE,EAAE,EAAE,CAACO,GAAG,EAAEC,cAAc,KAAK;IAC/C,IAAID,GAAG,EAAE;MACLF,QAAQ,CAACE,GAAG,EAAE,IAAI,CAAC;MACnB;IACJ;;IAEA;IACAX,EAAE,CAACa,KAAK,CAAC,sDAAsD,EAC3D,CAACN,QAAQ,EAAEK,cAAc,EAAEJ,KAAK,CAAC,EAAE,CAACG,GAAG,EAAEG,MAAM,KAAK;MAChD,IAAIH,GAAG,EAAE;QACLF,QAAQ,CAACE,GAAG,EAAE,IAAI,CAAC;QACnB;MACJ;MACAF,QAAQ,CAAC,IAAI,EAAEK,MAAM,CAAC;IAC1B,CAAC,CAAC;EACV,CAAC,CAAC;AACN,CAAC;;AAGD;AACA,SAASC,gBAAgBA,CAACR,QAAQ,EAAEH,QAAQ,EAAEK,QAAQ,EAAE;EACpD,MAAMO,GAAG,GAAG,wCAAwC;EACpDhB,EAAE,CAACiB,OAAO,CAACD,GAAG,EAAE,CAACT,QAAQ,CAAC,EAAE,CAACI,GAAG,EAAEO,OAAO,KAAK;IAC1C,IAAIP,GAAG,EAAE,OAAOF,QAAQ,CAACE,GAAG,CAAC;IAC7B,IAAIO,OAAO,CAACC,MAAM,KAAK,CAAC,EAAE,OAAOV,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAE;;IAEzD,MAAMN,IAAI,GAAGe,OAAO,CAAC,CAAC,CAAC;IACvB;IACAnB,MAAM,CAACqB,OAAO,CAAChB,QAAQ,EAAED,IAAI,CAACC,QAAQ,EAAE,CAACO,GAAG,EAAEU,OAAO,KAAK;MACtD,IAAIV,GAAG,EAAE,OAAOF,QAAQ,CAACE,GAAG,CAAC;MAC7B,IAAIU,OAAO,EAAE;QACTZ,QAAQ,CAAC,IAAI,EAAEN,IAAI,CAAC,CAAC,CAAC;MAC1B,CAAC,MAAM;QACHM,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;MAC3B;IACJ,CAAC,CAAC;EACN,CAAC,CAAC;AACN;AACAa,MAAM,CAACC,OAAO,GAAG;EAAEjB,YAAY;EAAES;AAAgB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}