{"ast":null,"code":"import React,{useState}from'react';import'./AuthForm.css';import'./Sidebar';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function AuthForm(_ref){let{onLogin}=_ref;const[isLogin,setIsLogin]=useState(true);const[username,setUsername]=useState('');const[password,setPassword]=useState('');const[email,setEmail]=useState('');const[error,setError]=useState('');const handleSubmit=e=>{e.preventDefault();setError('');// 添加验证逻辑\nconst usernameRegex=/^[a-zA-Z0-9]{6,12}$/;// 示例正则表达式，用于用户名验证\nconst passwordRegex=/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/;// 示例正则表达式，用于密码验证\nif(!username||!usernameRegex.test(username)){setError('用户名不能为空且为6-12个字符，包含字母和数字');return;}if(!password||!passwordRegex.test(password)){setError('密码不能为空且为8个字符以上，包含至少一个大写字母、一个小写字母和一个数字');return;}if(isLogin){console.log('登录:',{username,password});// 在此处添加登录逻辑\n}else{console.log('注册:',{username,email,password});// 在此处添加注册逻辑\n}};return/*#__PURE__*/_jsxs(\"div\",{className:\"auth-form\",children:[/*#__PURE__*/_jsx(\"h2\",{children:isLogin?'登录':'注册'}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u7528\\u6237\\u540D\\uFF1A\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:username,onChange:e=>setUsername(e.target.value),placeholder:\"\\u8BF7\\u8F93\\u5165\\u7528\\u6237\\u540D\"})]}),!isLogin&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u90AE\\u7BB1\\uFF1A\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:email,onChange:e=>setEmail(e.target.value),placeholder:\"\\u8BF7\\u8F93\\u5165\\u90AE\\u7BB1\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u5BC6\\u7801\\uFF1A\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),placeholder:\"\\u8BF7\\u8F93\\u5165\\u5BC6\\u7801\"})]}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",onClick:onLogin,children:isLogin?'登录':'注册'})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"toggle-btn\",onClick:()=>setIsLogin(!isLogin),children:[\"\\u5207\\u6362\\u5230\",isLogin?'注册':'登录']})]});}export default AuthForm;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","AuthForm","_ref","onLogin","isLogin","setIsLogin","username","setUsername","password","setPassword","email","setEmail","error","setError","handleSubmit","e","preventDefault","usernameRegex","passwordRegex","test","console","log","className","children","onSubmit","type","value","onChange","target","placeholder","onClick"],"sources":["D:/learing/peer_instrution/code/my-app/src/AuthForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './AuthForm.css';\r\nimport './Sidebar'\r\n\r\nfunction AuthForm({ onLogin }) {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n  \r\n    // 添加验证逻辑\r\n    const usernameRegex = /^[a-zA-Z0-9]{6,12}$/; // 示例正则表达式，用于用户名验证\r\n    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/; // 示例正则表达式，用于密码验证\r\n  \r\n    if (!username || !usernameRegex.test(username)) {\r\n      setError('用户名不能为空且为6-12个字符，包含字母和数字');\r\n      return;\r\n    }\r\n  \r\n    if (!password || !passwordRegex.test(password)) {\r\n      setError('密码不能为空且为8个字符以上，包含至少一个大写字母、一个小写字母和一个数字');\r\n      return;\r\n    }\r\n  \r\n    if (isLogin) {\r\n      console.log('登录:', { username, password });\r\n      // 在此处添加登录逻辑\r\n    } else {\r\n      console.log('注册:', { username, email, password });\r\n      // 在此处添加注册逻辑\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-form\">\r\n      <h2>{isLogin ? '登录' : '注册'}</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>用户名：</label>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            placeholder=\"请输入用户名\"\r\n          />\r\n        </div>\r\n        {!isLogin && (\r\n          <div className=\"form-group\">\r\n            <label>邮箱：</label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              placeholder=\"请输入邮箱\"\r\n            />\r\n          </div>\r\n        )}\r\n        <div className=\"form-group\">\r\n          <label>密码：</label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            placeholder=\"请输入密码\"\r\n          />\r\n        </div>\r\n        {error && <p className=\"error\">{error}</p>}\r\n        <button type=\"submit\" onClick={onLogin}>{isLogin ? '登录' : '注册'}</button>\r\n      </form>\r\n      <button className=\"toggle-btn\" onClick={() => setIsLogin(!isLogin)}>\r\n        切换到{isLogin ? '注册' : '登录'}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}