{"ast":null,"code":"var _jsxFileName = \"D:\\\\learing\\\\peer_instrution\\\\code\\\\my-app\\\\src\\\\component\\\\multipleChoiceQuestion.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './MultipleChoiceQuestion.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MultipleChoiceQuestion = ({\n  question,\n  options,\n  correctAnswer,\n  onAnswer\n}) => {\n  _s();\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [isAnswered, setIsAnswered] = useState(false);\n  const handleOptionClick = option => {\n    setSelectedOption(option);\n    setIsAnswered(true);\n    if (onAnswer) {\n      onAnswer(option === correctAnswer);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"multiple-choice-question\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"question\",\n      children: question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `option ${selectedOption === option ? 'selected' : ''} ${isAnswered && option === correctAnswer ? 'correct' : ''}`,\n        onClick: () => handleOptionClick(option),\n        disabled: isAnswered,\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), isAnswered && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"feedback\",\n      children: selectedOption === correctAnswer ? '正确答案！' : '答案错误，请再试一次。'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(MultipleChoiceQuestion, \"F+HsUfcUga712Z3HDYRACBK//KU=\");\n_c = MultipleChoiceQuestion;\nexport default MultipleChoiceQuestion;\nvar _c;\n$RefreshReg$(_c, \"MultipleChoiceQuestion\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MultipleChoiceQuestion","question","options","correctAnswer","onAnswer","_s","selectedOption","setSelectedOption","isAnswered","setIsAnswered","handleOptionClick","option","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/learing/peer_instrution/code/my-app/src/component/multipleChoiceQuestion.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './MultipleChoiceQuestion.css';\r\n\r\nconst MultipleChoiceQuestion = ({ question, options, correctAnswer, onAnswer }) => {\r\n    const [selectedOption, setSelectedOption] = useState(null);\r\n    const [isAnswered, setIsAnswered] = useState(false);\r\n\r\n    const handleOptionClick = (option) => {\r\n        setSelectedOption(option);\r\n        setIsAnswered(true);\r\n        if (onAnswer) {\r\n            onAnswer(option === correctAnswer);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"multiple-choice-question\">\r\n            <h2 className=\"question\">{question}</h2>\r\n            <div className=\"options\">\r\n                {options.map((option, index) => (\r\n                    <button\r\n                        key={index}\r\n                        className={`option ${selectedOption === option ? 'selected' : ''} ${isAnswered && option === correctAnswer ? 'correct' : ''}`}\r\n                        onClick={() => handleOptionClick(option)}\r\n                        disabled={isAnswered}\r\n                    >\r\n                        {option}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n            {isAnswered && (\r\n                <p className=\"feedback\">\r\n                    {selectedOption === correctAnswer ? '正确答案！' : '答案错误，请再试一次。'}\r\n                </p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MultipleChoiceQuestion;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,sBAAsB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,OAAO;EAAEC,aAAa;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/E,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMa,iBAAiB,GAAIC,MAAM,IAAK;IAClCJ,iBAAiB,CAACI,MAAM,CAAC;IACzBF,aAAa,CAAC,IAAI,CAAC;IACnB,IAAIL,QAAQ,EAAE;MACVA,QAAQ,CAACO,MAAM,KAAKR,aAAa,CAAC;IACtC;EACJ,CAAC;EAED,oBACIJ,OAAA;IAAKa,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBACrCd,OAAA;MAAIa,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAEZ;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxClB,OAAA;MAAKa,SAAS,EAAC,SAAS;MAAAC,QAAA,EACnBX,OAAO,CAACgB,GAAG,CAAC,CAACP,MAAM,EAAEQ,KAAK,kBACvBpB,OAAA;QAEIa,SAAS,EAAE,UAAUN,cAAc,KAAKK,MAAM,GAAG,UAAU,GAAG,EAAE,IAAIH,UAAU,IAAIG,MAAM,KAAKR,aAAa,GAAG,SAAS,GAAG,EAAE,EAAG;QAC9HiB,OAAO,EAAEA,CAAA,KAAMV,iBAAiB,CAACC,MAAM,CAAE;QACzCU,QAAQ,EAAEb,UAAW;QAAAK,QAAA,EAEpBF;MAAM,GALFQ,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMN,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EACLT,UAAU,iBACPT,OAAA;MAAGa,SAAS,EAAC,UAAU;MAAAC,QAAA,EAClBP,cAAc,KAAKH,aAAa,GAAG,OAAO,GAAG;IAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACZ,EAAA,CAlCIL,sBAAsB;AAAAsB,EAAA,GAAtBtB,sBAAsB;AAoC5B,eAAeA,sBAAsB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}