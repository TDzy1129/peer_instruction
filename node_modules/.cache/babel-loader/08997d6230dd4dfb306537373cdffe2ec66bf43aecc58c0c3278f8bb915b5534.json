{"ast":null,"code":"var _jsxFileName = \"D:\\\\learing\\\\peer_instrution\\\\code\\\\my-app\\\\src\\\\component\\\\answer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst Answer = ({\n  questionId\n}) => {\n  _s();\n  // 模拟数据：假设这就是从后端获取的答题分布\n  const [answerData, setAnswerData] = useState(null);\n  useEffect(() => {\n    // 本地初始化模拟数据（这部分可以模拟从后端获取的数据）\n    const localAnswerData = {\n      A: 5,\n      B: 3,\n      C: 7,\n      D: 1\n    };\n\n    // 模拟从后端加载数据，设置答题数据\n    setAnswerData(localAnswerData);\n  }, []); // 空数组意味着仅在组件挂载时执行一次\n\n  // 如果 answerData 还没有加载完成，显示 loading\n  if (!answerData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 图表的数据\n  const chartData = {\n    labels: ['A', 'B', 'C', 'D'],\n    // 选项\n    datasets: [{\n      label: 'Answer Distribution',\n      data: [answerData.A, answerData.B, answerData.C, answerData.D],\n      // 模拟的答题分布数据\n      backgroundColor: ['#FF5733', '#33FF57', '#3357FF', '#FF33A1'],\n      // 每个选项的颜色\n      borderColor: ['#FF5733', '#33FF57', '#3357FF', '#FF33A1'],\n      borderWidth: 1\n    }]\n  };\n\n  // 图表的配置\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      title: {\n        display: true,\n        text: 'Answer Distribution for Question ' + questionId\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            return `${context.label}: ${context.raw} responses`; // 每个选项的响应数量\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Options' // 横坐标标签\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Number of Responses' // 纵坐标标签\n        },\n        beginAtZero: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '80%',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Answer Distribution for Question \", questionId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Answer, \"UsdluBisEQZqe81O4olKeCMWUUE=\");\n_c = Answer;\nexport default Answer;\nvar _c;\n$RefreshReg$(_c, \"Answer\");","map":{"version":3,"names":["React","useEffect","useState","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Answer","questionId","_s","answerData","setAnswerData","localAnswerData","A","B","C","D","children","fileName","_jsxFileName","lineNumber","columnNumber","chartData","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","chartOptions","responsive","plugins","title","display","text","tooltip","callbacks","context","raw","scales","x","y","beginAtZero","style","width","margin","options","_c","$RefreshReg$"],"sources":["D:/learing/peer_instrution/code/my-app/src/component/answer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst Answer = ({ questionId }) => {\r\n  // 模拟数据：假设这就是从后端获取的答题分布\r\n  const [answerData, setAnswerData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // 本地初始化模拟数据（这部分可以模拟从后端获取的数据）\r\n    const localAnswerData = {\r\n      A: 5,\r\n      B: 3,\r\n      C: 7,\r\n      D: 1,\r\n    };\r\n\r\n    // 模拟从后端加载数据，设置答题数据\r\n    setAnswerData(localAnswerData);\r\n  }, []);  // 空数组意味着仅在组件挂载时执行一次\r\n\r\n  // 如果 answerData 还没有加载完成，显示 loading\r\n  if (!answerData) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  // 图表的数据\r\n  const chartData = {\r\n    labels: ['A', 'B', 'C', 'D'], // 选项\r\n    datasets: [\r\n      {\r\n        label: 'Answer Distribution',\r\n        data: [answerData.A, answerData.B, answerData.C, answerData.D], // 模拟的答题分布数据\r\n        backgroundColor: ['#FF5733', '#33FF57', '#3357FF', '#FF33A1'], // 每个选项的颜色\r\n        borderColor: ['#FF5733', '#33FF57', '#3357FF', '#FF33A1'],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  // 图表的配置\r\n  const chartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      title: {\r\n        display: true,\r\n        text: 'Answer Distribution for Question ' + questionId,\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function (context) {\r\n            return `${context.label}: ${context.raw} responses`; // 每个选项的响应数量\r\n          },\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: 'Options', // 横坐标标签\r\n        },\r\n      },\r\n      y: {\r\n        title: {\r\n          display: true,\r\n          text: 'Number of Responses', // 纵坐标标签\r\n        },\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: '80%', margin: '0 auto' }}>\r\n      <h3>Answer Distribution for Question {questionId}</h3>\r\n      <Bar data={chartData} options={chartOptions} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Answer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}